//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UISpriteConfigWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UISpriteConfig), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetSprite", GetSprite);
		L.RegFunction("AddSprite", AddSprite);
		L.RegFunction("Count", Count);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_spriteList", get_m_spriteList, set_m_spriteList);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UISpriteConfig obj = (UISpriteConfig)ToLua.CheckObject(L, 1, typeof(UISpriteConfig));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Sprite o = obj.GetSprite(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddSprite(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UISpriteConfig obj = (UISpriteConfig)ToLua.CheckObject(L, 1, typeof(UISpriteConfig));
			UnityEngine.Sprite arg0 = (UnityEngine.Sprite)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Sprite));
			obj.AddSprite(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Count(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UISpriteConfig obj = (UISpriteConfig)ToLua.CheckObject(L, 1, typeof(UISpriteConfig));
			int o = obj.Count();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_spriteList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UISpriteConfig obj = (UISpriteConfig)o;
			System.Collections.Generic.List<UnityEngine.Sprite> ret = obj.m_spriteList;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_spriteList on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_spriteList(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UISpriteConfig obj = (UISpriteConfig)o;
			System.Collections.Generic.List<UnityEngine.Sprite> arg0 = (System.Collections.Generic.List<UnityEngine.Sprite>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<UnityEngine.Sprite>));
			obj.m_spriteList = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_spriteList on a nil value" : e.Message);
		}
	}
}


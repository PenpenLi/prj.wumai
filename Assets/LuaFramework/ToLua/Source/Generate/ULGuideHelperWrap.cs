//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ULGuideHelperWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ULGuideHelper), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("uiExists", uiExists);
		L.RegFunction("findUi", findUi);
		L.RegFunction("getUiPosition", getUiPosition);
		L.RegFunction("tryClick", tryClick);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("guideRoot", get_guideRoot, set_guideRoot);
		L.RegVar("uiCamera", get_uiCamera, set_uiCamera);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int uiExists(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ULGuideHelper obj = (ULGuideHelper)ToLua.CheckObject(L, 1, typeof(ULGuideHelper));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.uiExists(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int findUi(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ULGuideHelper obj = (ULGuideHelper)ToLua.CheckObject(L, 1, typeof(ULGuideHelper));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.findUi(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getUiPosition(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(ULGuideHelper), typeof(string), typeof(UnityEngine.Transform)))
			{
				ULGuideHelper obj = (ULGuideHelper)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.ToObject(L, 3);
				UnityEngine.Vector2 o = obj.getUiPosition(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(ULGuideHelper), typeof(string), typeof(UnityEngine.RectTransform)))
			{
				ULGuideHelper obj = (ULGuideHelper)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.RectTransform arg1 = (UnityEngine.RectTransform)ToLua.ToObject(L, 3);
				UnityEngine.Vector2 o = obj.getUiPosition(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(ULGuideHelper), typeof(string), typeof(UnityEngine.Transform), typeof(UnityEngine.Camera)))
			{
				ULGuideHelper obj = (ULGuideHelper)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.ToObject(L, 3);
				UnityEngine.Camera arg2 = (UnityEngine.Camera)ToLua.ToObject(L, 4);
				UnityEngine.Vector2 o = obj.getUiPosition(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(ULGuideHelper), typeof(string), typeof(UnityEngine.RectTransform), typeof(UnityEngine.Camera)))
			{
				ULGuideHelper obj = (ULGuideHelper)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.RectTransform arg1 = (UnityEngine.RectTransform)ToLua.ToObject(L, 3);
				UnityEngine.Camera arg2 = (UnityEngine.Camera)ToLua.ToObject(L, 4);
				UnityEngine.Vector2 o = obj.getUiPosition(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ULGuideHelper.getUiPosition");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int tryClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ULGuideHelper obj = (ULGuideHelper)ToLua.CheckObject(L, 1, typeof(ULGuideHelper));
			string arg0 = ToLua.CheckString(L, 2);
			obj.tryClick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_guideRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULGuideHelper obj = (ULGuideHelper)o;
			UnityEngine.Transform ret = obj.guideRoot;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guideRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_uiCamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULGuideHelper obj = (ULGuideHelper)o;
			UnityEngine.Camera ret = obj.uiCamera;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uiCamera on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_guideRoot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULGuideHelper obj = (ULGuideHelper)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.guideRoot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index guideRoot on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_uiCamera(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULGuideHelper obj = (ULGuideHelper)o;
			UnityEngine.Camera arg0 = (UnityEngine.Camera)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Camera));
			obj.uiCamera = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index uiCamera on a nil value" : e.Message);
		}
	}
}


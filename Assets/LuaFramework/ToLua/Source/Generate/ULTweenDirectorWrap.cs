//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ULTweenDirectorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ULTweenDirector), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("AddNextPosition", AddNextPosition);
		L.RegFunction("AddNextRotation", AddNextRotation);
		L.RegFunction("Play", Play);
		L.RegFunction("Clear", Clear);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_actor", get_m_actor, set_m_actor);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				obj.Init();
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector), typeof(UnityEngine.Vector3), typeof(UnityEngine.Vector3)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				UnityEngine.Vector3 arg1 = ToLua.ToVector3(L, 3);
				obj.Init(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ULTweenDirector.Init");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNextPosition(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg3 = ToLua.ToLuaFunction(L, 5);
				obj.AddNextPosition(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(UITweener.Method)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg3 = ToLua.ToLuaFunction(L, 5);
				UITweener.Method arg4 = (UITweener.Method)ToLua.ToObject(L, 6);
				obj.AddNextPosition(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ULTweenDirector.AddNextPosition");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddNextRotation(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 5 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg3 = ToLua.ToLuaFunction(L, 5);
				obj.AddNextRotation(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 6 && TypeChecker.CheckTypes(L, 1, typeof(ULTweenDirector), typeof(UnityEngine.Vector3), typeof(float), typeof(float), typeof(LuaInterface.LuaFunction), typeof(UITweener.Method)))
			{
				ULTweenDirector obj = (ULTweenDirector)ToLua.ToObject(L, 1);
				UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
				float arg1 = (float)LuaDLL.lua_tonumber(L, 3);
				float arg2 = (float)LuaDLL.lua_tonumber(L, 4);
				LuaFunction arg3 = ToLua.ToLuaFunction(L, 5);
				UITweener.Method arg4 = (UITweener.Method)ToLua.ToObject(L, 6);
				obj.AddNextRotation(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: ULTweenDirector.AddNextRotation");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ULTweenDirector obj = (ULTweenDirector)ToLua.CheckObject(L, 1, typeof(ULTweenDirector));
			obj.Play();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ULTweenDirector obj = (ULTweenDirector)ToLua.CheckObject(L, 1, typeof(ULTweenDirector));
			obj.Clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_actor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULTweenDirector obj = (ULTweenDirector)o;
			UnityEngine.GameObject ret = obj.m_actor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_actor on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_actor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ULTweenDirector obj = (ULTweenDirector)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_actor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_actor on a nil value" : e.Message);
		}
	}
}


//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class PrefabLightmapDataWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(PrefabLightmapData), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetLightmapping", SetLightmapping);
		L.RegFunction("ClearLightmapping", ClearLightmapping);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("autoSet", get_autoSet, set_autoSet);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLightmapping(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PrefabLightmapData obj = (PrefabLightmapData)ToLua.CheckObject(L, 1, typeof(PrefabLightmapData));
			obj.SetLightmapping();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearLightmapping(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			PrefabLightmapData obj = (PrefabLightmapData)ToLua.CheckObject(L, 1, typeof(PrefabLightmapData));
			obj.ClearLightmapping();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PrefabLightmapData obj = (PrefabLightmapData)o;
			bool ret = obj.autoSet;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSet on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoSet(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			PrefabLightmapData obj = (PrefabLightmapData)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoSet = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoSet on a nil value" : e.Message);
		}
	}
}

